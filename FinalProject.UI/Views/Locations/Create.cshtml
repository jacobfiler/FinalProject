@model FinalProject.DATA.Location

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Location</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-4 offset-md-2">
                @Html.EditorFor(model => model.StoreNumber, new { htmlAttributes = new { @class = "form-control text-box-media", placeholder = "Store Number" } })
                @Html.ValidationMessageFor(model => model.StoreNumber, "", new { @class = "text-danger" })
            </div>



            <div class="col-md-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control text-box-media", placeholder = "City" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-2 offset-md-2">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control ", placeholder = "State" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>


            @Html.LabelFor(model => model.ManagerID, "Manager", htmlAttributes: new { @class = "control-label col-md-1 offset-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("ManagerID", null, htmlAttributes: new { @class = "form-control", placeholder = "Manager" })
                @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-success" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
